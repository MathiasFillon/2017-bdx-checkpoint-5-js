{"_id":{"$oid":"5965e636747f01276c1419c0"},"updatedAt":{"$date":"2017-07-12T09:04:54.396Z"},"createdAt":{"$date":"2017-07-12T09:04:54.396Z"},"title":"Exercice 1","content":"Un fork: le fork est la copie d'un repositorie Github. Il permet de copier intégralement le contenue d'un repo et de travailler dessus sans détruire le repo initiale.\n\nPull Request: le pull request permet à une personne de proposer une solution alternative au code créer par l'auteur du répo. L'auteur va voir la pull Request, à l'intérieur, il y aura ça version, comparé avec la nouvelle version qu'une personne propose. Et l'auteur du répo aura le choix d'accepter les modifications ou pas. \n\nUne branche: Les branches permettent à plusieurs personnes personnes de travailler sur un même projet et sur le même répo. Chaque branche est une copie de version de départ et chaque personne la modifie comme bon lui semble sans modifié le code de l'autre. On peut par la suite fusionner deux branche pour mettre à jour le code....\n\ndifférence entre un Fork et une Branche: Un Fork copie le répositorie complet, c'est à dire que l'on créer un nouvel url, on peut travailler dessus comme l'on veut, créer de nouvelles branches.... Sans altéré le répositorie de base. Une branche va permette de travailler de son côté au seins d'un répositorie, pour cela sois on créer notre répositorie, puis notre branche. Sois l'on fork un projet et par la suite on rajoute notre branche, ou alors on clone un projet et créer la aussi notre propre branche. \nSouvent l'on fait alors un fork, puis la création d'une branche à la suite de ce fork.","__v":0}
{"_id":{"$oid":"5965eeda747f01276c1419c1"},"updatedAt":{"$date":"2017-07-12T09:41:46.570Z"},"createdAt":{"$date":"2017-07-12T09:41:46.570Z"},"title":"La MEAN stack","content":"Angular:\n  Angular est un framework de javascript. Il s'utilise côté front et permet de rajouter des éléments à nos vues html. En ce qui concerne ce projet, angular est obligatoire, si on l'enlève plus rien ne marche.\n\nAngular UI Router:\n  Angular UI Router est un module d'angular, qui marche donc qu'avec angular. Il s'utilise côté front et le rajouter permet de gérer les routes entre les vues dans angular. L'enlever ne ferais plus marché correctement l'habillage du site, car plusieurs éléments venais à disparaîte, et ajouter à cela le fait que tout les liens ne marcherais plus.\n\nExpress:\n  Express est un framework de node.js. Il s'utilise côté back, il permet de mettre en place un systéme de \"route\" au sein de node.js qui vont servir à communiquer avec le front. Tout cela à l'aide d'une écriture simplifié de l'originale. Si nous enlevons Express, le projet ne marche plus, car plus aucunes données ne passe entre le back et le front.\n\nMongoose:\n  Mongoose est un module node.js qui s'utilise avec mongod pour tout ce qui concerne base de donnée. Il s'utilise donc au niveau du back-end et permet de faire l'interface entre la base de donnée mongod et le serveur node.js. Celui va permette de créer des models pour stockés nos comme on le souhaite dans mongod. Pour notre projet il est indispensable car c'est lui qui récupére les données du serveur et qui va les \"rangées\" comme on la souhaité dans mongod.\n\nMaterializeCSS:\n  Materialize est une bibliothéque qui va permette \"l'habillement\" de notre page web. Elle s'utilise côté front et va mettre à dispositon plusieurs outils (css, javascript, html...) pour rajouter des compsosants facilements à nôtre page web. Si on le suprime du projet, nôtre projet sera juste moins \"sexy\" mais continura de marcher.\n\nPassport:\n  Passport est un module node.js. Il s'utilise côté back. C'est ce module qui va permettre l'authentification dans notre projet. Il est donc indispensable si nous voulons pouvoir nous connecter. Cependant l'application continuera de tourner même si il est supprimé.\n\nBabel:\n  \nSCSS:\n  \n  \nNodemon:\n\nWebpack:\n\nLivereload:","__v":0}
{"_id":{"$oid":"596622ae07f0aa60d0502c07"},"updatedAt":{"$date":"2017-07-12T13:22:54.044Z"},"createdAt":{"$date":"2017-07-12T13:22:54.044Z"},"title":"Les meilleurs spots de surf","content":"Saint-Leu, mundaka, Pipeline....","date":{"$date":"2017-12-06T23:00:00.000Z"},"__v":0}
{"_id":{"$oid":"596632a19079e46d87d4b4eb"},"updatedAt":{"$date":"2017-07-12T14:30:57.125Z"},"createdAt":{"$date":"2017-07-12T14:30:57.125Z"},"title":"Méthode Scrum","content":"Que sont les méthodes agiles ? \n      Voici les principales méthodes agiles connues: Scrum, méthode qui ce divise en plusieurs \"sprint\" (3 semaines à 1 moi) qui sont des moments d'avancement d'un projet et à la fin de chacun d'eux, discussion avec le client sur le projet...\nUne autre méthode est appelé Rapid Application Development (RAD), celle ci fais est faite pour des projets assez \"court\" (entre 90 et 120 jours maximum). Elle utilise un mode appelé \"cascade\", c'est à dire qu'elle démarre par le général pour allé au plus complexe. Donc au début elle comme commence par la structure globale, puis le design, puis plus on avance on va dans les tâches complexes...\n\nQu’est-ce que SCRUM ? \n Le but de la méthode SCRUM est d'avancer dans un projet en étant en relation avec le clients le plus souvent possible, savoir exactement ou en est le projet, avoir une communication régulière avec le reste de l'équipe, réussir à avancer ensemble... Cette méthode ce divise en sprint de plusieurs semaine, ou l'on doit réussir les divers tâche qu'on à décrite au début du sprint. Et à la fin de chaque sprint, il y à un rendez-vous clients. \n\nDéfinir le Product BackLog, de quoi est-il constitué ? \n  Ce sont toutes les tâches qu'il y à développer pendant le prochain sprint.\n\nDéfinir le Product Owner\n  Le product Owner est une personne désigné au début du projet, et est celui qui va avoir une vue global du projet mais du côté client, en quelque sorte il va devoir ce mettre à place d'un utilisateur pendant la construction du projet.\n\nDéfinir le SCRUM Master\n  C'est en quelque sorte le \"chef de projet\", c'est qu'il va faire en sorte que l'on respect la méthode agile, que l'on respect les délais.... \n  \nDéfinir la « Development team »\n  Ce sont tout les développeurs qui vont réaliser le projet et qui vont définir les tâches pour le mener à bien.\n\nDéfinir le Sprint, de quoi est-il constitué ?\n Le sprint est composé de 3 à 4 semaines. Et permet de développer le projet pendant ce lapse de temps. Tout les jours il y à un dayli scrum organisé et à chaque fin de semaine une retrospective de la semaine. Et chaque fin de sprint on redéfinie les tâche, on parle au client.\n \nDéfinir le daily scrum\n  Le sayli scrum est fait chaque jours pour discuter des avancements à faire dans la journée, permet aussi de discuter des problème rencontrer, de l'avancement du projets....\n\nQu’est-ce que la planification d’un sprint ? \n\nQu’est-ce que la révision d’un sprint ?\n\nQu’est-ce que la rétrospective d’un sprint ?\n \nAttention : en cours nous appelions « rétrospective » ce qui est en réalité la « révision du sprint » au sens de la méthodologie SCRUM. Nous n’avons pas réellement fait de rétrospective sur un sprint, essayez de trouver l’info en ligne sur la différence entre ces 2 notions (vous avez le droit au cours)\n\nPourquoi est-il important de définir la notion de « Done » pour les tâches ?\n\nLa notion de « Done » peut-elle évoluer au cours d’un projet SCRUM ? \n\nSCRUM est-elle une méthodologie itérative ? Justifier.","__v":0}
